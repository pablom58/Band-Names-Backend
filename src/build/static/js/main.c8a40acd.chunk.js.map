{"version":3,"sources":["config/index.js","context/SocketContext.js","hooks/useSocket.js","pages/Home/styles.js","components/BandAdd/styles.js","components/BandAdd/index.jsx","components/BandList/styles.js","components/BandList/index.jsx","components/Chart/styles.js","components/Chart/index.jsx","pages/Home/index.jsx","App.jsx","index.jsx"],"names":["SOCKET_ENTRYPOINT","SocketContext","createContext","SocketProvider","children","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","Container","styled","div","Text","p","Title","h1","StyledButton","Button","BandAdd","name","setName","useContext","onChange","input","target","label","onClick","trim","emit","BandList","bands","setBands","inputTextEditor","props","field","type","defaultValue","rowData","onBlur","id","updateBand","editMode","className","header","body","editor","handleEdit","Chart","chartData","setChartData","labels","map","band","datasets","data","votes","backgroundColor","palette","length","hex","options","legend","fontColor","Home","style","color","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8a40acd.chunk.js","sourcesContent":["export const SOCKET_ENTRYPOINT = 'https://pmvs-bandnames.herokuapp.com/'","import { createContext } from 'react'\r\nimport { useSocket } from '../hooks/useSocket'\r\n\r\nexport const SocketContext = createContext()\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    \r\n    const { socket , online } = useSocket()\r\n    \r\n    return (\r\n        <SocketContext.Provider value={{ socket , online }} >\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","import { useState , useEffect , useMemo } from 'react'\r\nimport io from 'socket.io-client'\r\nimport { SOCKET_ENTRYPOINT } from '../config'\r\n\r\nexport const useSocket = () => {\r\n    const socket = useMemo(() => io.connect(SOCKET_ENTRYPOINT,{\r\n        transports: ['websocket']\r\n    }),[ SOCKET_ENTRYPOINT ])\r\n\r\n    const [online,setOnline] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setOnline(socket.connected)\r\n    },[socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('connect', () => setOnline(true))\r\n    },[socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('disconnect',() => setOnline(false))\r\n    },[socket])\r\n\r\n    return {\r\n        socket,\r\n        online\r\n    }\r\n}","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    text-align: left;\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    width: 100%;\r\n    text-align: justify;\r\n    font-size: 25px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid rgba(0,0,0,.3);\r\n    margin-bottom: 25px;\r\n`","import styled from 'styled-components'\r\nimport { Button } from 'primereact/button'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 25px;\r\n`\r\n\r\nexport const StyledButton = styled(Button)`\r\n    margin-left: 15px;\r\n`","import React , { useState , useContext } from 'react'\r\nimport { SocketContext } from '../../context/SocketContext'\r\n\r\nimport {\r\n    Container,\r\n    StyledButton\r\n} from './styles'\r\n\r\nimport { InputText } from 'primereact/inputtext'\r\n\r\nconst BandAdd = () => {\r\n\r\n    const [ name , setName ] = useState('')\r\n\r\n    const { socket } = useContext(SocketContext)\r\n\r\n    const saveBand = () => {\r\n        if(name.trim() !== ''){\r\n            socket.emit('add-band',{ name: name.trim() })\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <InputText value={name} onChange={input => setName(input.target.value)} />\r\n            <StyledButton label='Add' onClick={saveBand} />\r\n        </Container> \r\n    )\r\n}\r\n\r\nexport default BandAdd","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n`","import React , { useState , useEffect , useContext } from 'react'\r\nimport { SocketContext } from '../../context/SocketContext'\r\n\r\nimport {\r\n    Container\r\n} from './styles'\r\n\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Button } from 'primereact/button'\r\n\r\nconst BandList = () => {\r\n\r\n    const { socket } = useContext(SocketContext)\r\n    const [ bands , setBands ] = useState([])\r\n\r\n    useEffect(() => {\r\n        socket.emit('get-bands')\r\n    },[socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('get-bands', bands => setBands(bands))\r\n    },[socket])\r\n\r\n    const updateBand = (id,field,value) => {\r\n        if(value.trim() !== '')\r\n            socket.emit('update-band',{\r\n                id,\r\n                [field]: value\r\n            })\r\n    }\r\n\r\n    const inputTextEditor = (props, field) =>{\r\n        return <InputText type='text' defaultValue={props.rowData[field]} onBlur={input => updateBand(props.rowData.id,field,input.target.value)} />\r\n    }\r\n\r\n    const handleEdit = (props,field) => {\r\n        return inputTextEditor(props,field)\r\n    }\r\n\r\n    const voteBand = id => {\r\n        socket.emit('vote-band',{ id })\r\n    }\r\n\r\n    const deleteBand = id => {\r\n        socket.emit('delete-band',{ id })\r\n    }\r\n\r\n    const voteActionButton = rowData => {\r\n        return <Button label='+1' onClick={() => voteBand(rowData.id)} />\r\n    }\r\n\r\n    const deleteActionButton = rowData => {\r\n        return <Button label='Delete' className='p-button-danger' onClick={() => deleteBand(rowData.id)} />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <DataTable value={bands} editMode='cell' className='editable-cells-table' >\r\n                <Column header='Votar' body={voteActionButton} />\r\n                <Column field='name' header='Band Name' editor={props => handleEdit(props,'name')} />\r\n                <Column field='votes' header='Votes' />\r\n                <Column header='Eliminar' body={deleteActionButton} />\r\n            </DataTable>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BandList","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: 25px;\r\n    & canvas{\r\n        width: 500px;\r\n        height: 500px;\r\n    }\r\n`","import React , { useState , useContext , useEffect } from 'react'\r\nimport { SocketContext } from '../../context/SocketContext'\r\nimport palette from 'google-palette'\r\n\r\nimport { Container } from './styles'\r\n\r\nimport { Chart as PrimeChart } from 'primereact/chart'\r\n\r\nconst Chart = () => {\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    }\r\n\r\n    const { socket } = useContext(SocketContext)\r\n    const [ chartData , setChartData ] = useState({})\r\n\r\n    useEffect(() => {\r\n        socket.on('get-bands',bands => {\r\n            setChartData({\r\n                labels: bands.map(band => band.name),\r\n                datasets: [\r\n                    {\r\n                        data: bands.map(band => band.votes),\r\n                        backgroundColor: palette(['tol', 'qualitative'], bands.length).map(hex => {\r\n                            return '#' + hex;\r\n                        })\r\n                    }\r\n                ]\r\n            })\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <PrimeChart type='pie' data={chartData} options={lightOptions} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Chart","import React , { useContext } from 'react'\r\nimport { SocketContext } from '../../context/SocketContext'\r\n\r\nimport {\r\n    Container,\r\n    Text,\r\n    Title\r\n} from './styles'\r\n\r\nimport BandAdd from '../../components/BandAdd'\r\nimport BandList from '../../components/BandList'\r\nimport Chart from '../../components/Chart'\r\n\r\nconst Home = () => {\r\n\r\n    const { online } = useContext(SocketContext)\r\n\r\n    return (\r\n        <Container>\r\n            <Text>\r\n               Service \r\n               <span \r\n                style={{\r\n                    color: online ? 'green' : 'red' \r\n                }} \r\n               >\r\n                   { online ? ' Online' : ' Offline' }\r\n                </span>\r\n            </Text>\r\n            <Title>PMVS BandNames</Title>\r\n            <Chart />\r\n            <BandAdd />\r\n            <BandList />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nimport Home from './pages/Home'\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Home />\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { SocketProvider } from './context/SocketContext'\r\n\r\nimport App from './App'\r\n\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nrender(\r\n    <SocketProvider>\r\n        <App />\r\n    </SocketProvider>\r\n    ,\r\n    document.getElementById('App')\r\n)"],"sourceRoot":""}